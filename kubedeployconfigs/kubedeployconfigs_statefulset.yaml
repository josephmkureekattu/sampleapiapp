---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "sampleapp2"
  namespace: "testnamespace"
  labels:
    app: "sampleapp2"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "sampleapp2"
  template:
    metadata:
      labels:
        app: "sampleapp2"
    spec:
      containers:
      - name: "sampleapiapp"
        image: "__CONTAINER-REPO__/__imageRepository__:__tag__"
        ports:
        - containerPort: 80
          protocol: TCP
        env:
        - name: DBConnection
          value: "__DBConnection__"        
        resources:
          requests:
            cpu: 250m
          limits:
            cpu: 500m
---
apiVersion: v1
kind: Service
metadata:
  name: sampleapp2service
  namespace: testnamespace
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: sampleapp2
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sampleapp2-ingress
  namespace: testnamespace
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  defaultBackend:
    service:
      name: sampleapp2service
      port:
        number: 80
---
apiVersion: "autoscaling/v2"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "sampleapp2-hpa-ardv"
  namespace: "testnamespace"
  labels:
    app: "sampleapp2"
spec:
  scaleTargetRef:
    kind: "Deployment"
    name: "sampleapp2"
    apiVersion: "apps/v1"
  minReplicas: 1
  maxReplicas: 2
  metrics:
  - type: "Resource"
    resource:
      name: "cpu"
      target:
        type: "Utilization"
        averageUtilization: 3
---
apiVersion: v1
kind: Service
metadata:
  name: sql-server
  labels:
    app: sql-server
spec:
  ports:
    - port: 1433
  clusterIP: None
  selector:
    app: sql-server
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sql-server
spec:
  serviceName: sql-server
  replicas: 1
  selector:
    matchLabels:
      app: sql-server
  template:
    metadata:
      labels:
        app: sql-server
    spec:
      containers:
        - name: sql-server
          image: mcr.microsoft.com/mssql/server:latest
          env:
            - name: ACCEPT_EULA
              value: "Y"
            - name: MSSQL_SA_PASSWORD
              value: "Password@123"  # Adjust the password as needed
          ports:
            - containerPort: 1433
          volumeMounts:
            - name: sql-server-persistent-storage
              mountPath: /var/opt/mssql
          command: ["/bin/bash", "-c"]
          args:
            - |
              /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P $MSSQL_SA_PASSWORD -Q "CREATE DATABASE sampleapidb;"
  volumeClaimTemplates:
    - metadata:
        name: sql-server-persistent-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi  # Adjust size based on your requirements
